package fr.unice.polytech.si3.ps5.teamb.diceforge.bot.strategy.exploit.behaviour;

import static org.junit.Assert.assertEquals;

import java.util.ArrayList;
import java.util.List;

import org.junit.Before;
import org.junit.Test;

import fr.unice.polytech.si3.ps5.teamb.diceforge.game.exploit.card.Card;
import fr.unice.polytech.si3.ps5.teamb.diceforge.game.exploit.card.Hydra;

public class HighestExploitTest {
    private StratExploitHighestExploit hCard;

    @Before
    public void setup() {
        hCard = new StratExploitHighestExploit();

    }

    @Test
    public void test() {
        List<Card> feasiblecard = new ArrayList<>();
        feasiblecard.add(new Hydra(1, 0, 5));
        feasiblecard.add(new Hydra(2, 0, 6));
        feasiblecard.add(new Hydra(3, 0, 7));
        feasiblecard.add(new Hydra(4, 0, 8));
        feasiblecard.add(new Hydra(5, 0, 9));
        feasiblecard.add(new Hydra(0, 1, 5));
        feasiblecard.add(new Hydra(0, 2, 6));
        feasiblecard.add(new Hydra(0, 3, 7));
        feasiblecard.add(new Hydra(0, 4, 8));
        feasiblecard.add(new Hydra(0, 5, 9));
        feasiblecard.add(new Hydra(1, 1, 10));
        feasiblecard.add(new Hydra(2, 2, 11));
        feasiblecard.add(new Hydra(3, 3, 12));
        feasiblecard.add(new Hydra(4, 4, 13));
        feasiblecard.add(new Hydra(5, 5, 14));
        feasiblecard.add(new Hydra(5, 5, 14));

        Card test = hCard.execution(feasiblecard);
        assertEquals(5, test.getMoonStone());
        assertEquals(5, test.getSunStone());
        assertEquals(14, test.getVictoryPoints());

    }
}