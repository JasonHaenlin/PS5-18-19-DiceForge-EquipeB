package fr.unice.polytech.si3.ps5.teamb.diceforge.game.exploit.card;

public enum CardEnum {

    WILD_SPIRITS("Wild Spirits") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new WildSpirits(moonStone, sunStone, victoryPoints);
        }
    },
    CANCER("Cancer") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Cancer(moonStone, sunStone, victoryPoints);
        }
    },
    FERRYMAN("Ferryman") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Ferryman(moonStone, sunStone, victoryPoints);
        }
    },
    HYDRA("Hydra") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Hydra(moonStone, sunStone, victoryPoints);
        }
    },
    SPHINX("Sphynx") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Sphynx(moonStone, sunStone, victoryPoints);
        }
    },
    GORGON("Gorgon") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Gorgon(moonStone, sunStone, victoryPoints);
        }
    },
    BLACKSMITH_CHEST("The Blacksmith's Chest") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new BlacksmithChest(moonStone, sunStone, victoryPoints);
        }
    },
    BLACKSMITH_HAMMER("The Blacksmith's Hammer") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new BlacksmithHammer(moonStone, sunStone, victoryPoints);
        }
    },
    SENTINEL("Sentinel") {
        @Override
        public Card build(int moonStone, int sunStone, int victoryPoints) {
            return new Sentinel(moonStone, sunStone, victoryPoints);
        }

    };

    private String name;

    CardEnum(String name) {
        this.name = name;
    }

    @Override
    public String toString() {
        return name;
    }

    public abstract Card build(int moonStone, int sunStone, int victoryPoints);

}