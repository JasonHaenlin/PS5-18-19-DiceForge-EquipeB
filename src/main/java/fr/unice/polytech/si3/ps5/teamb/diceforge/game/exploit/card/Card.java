package fr.unice.polytech.si3.ps5.teamb.diceforge.game.exploit.card;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import fr.unice.polytech.si3.ps5.teamb.diceforge.game.Resources;

public class Card {

    private int moonStone;
    private int sunStone;
    private Map<Resources, Integer> earnings;
    protected Action act;

    private List<Resources> aimResources;
    private Resources transformResources;
    private int ratio;

    public Card(int moonStone, int sunStone, Map<Resources, Integer> earnings) {
        setup(moonStone, sunStone, earnings);
    }

    public Card(int moonStone, int sunStone, int victoryPoints) {
        Map<Resources, Integer> vp = new HashMap<>();
        vp.put(Resources.VICTORY_POINT, victoryPoints);
        setup(moonStone, sunStone, vp);
    }

    private void setup(int moonStone, int sunStone, Map<Resources, Integer> earnings) {
        this.moonStone = moonStone;
        this.sunStone = sunStone;
        this.earnings = earnings;
    }

    public Card addAction(Action act) {
        this.act = act;
        return this;
    }

    public Card addAddOn(List<Resources> aim, Resources transform, int ratio) {
        this.aimResources = aim;
        this.transformResources = transform;
        this.ratio = ratio;
        return this;
    }

    public Action hasNextAction() {
        return Action.NO_ACTION;
    }

    /**
     * @return the earnings
     */
    public Map<Resources, Integer> getEarnings() {
        return earnings;
    }

    public int getVictoryPoint() {
        return earnings.get(Resources.VICTORY_POINT);
    }

    public int getMoonStone() {
        return moonStone;
    }

    public int getSunStone() {
        return sunStone;
    }

    /**
     * @return the aimResources
     */
    public List<Resources> getAimResources() {
        return aimResources;
    }

    /**
     * @return the ratio
     */
    public int getRatio() {
        return ratio;
    }

    /**
     * @return the transformResources
     */
    public Resources getTransformResources() {
        return transformResources;
    }

}