package fr.unice.polytech.si3.ps5.teamb.diceforge.game.exploit.card;

import java.util.HashMap;
import java.util.Map;

import fr.unice.polytech.si3.ps5.teamb.diceforge.game.Inventory;
import fr.unice.polytech.si3.ps5.teamb.diceforge.game.Resources;

public abstract class Card {

    private int moonStone;
    private int sunStone;
    private int victoryPoints;

    protected int numberOfImmEffect;
    protected Map<Resources, Integer> resInStock;

    public Card(int moonStone, int sunStone, int victoryPoints) {
        setup(moonStone, sunStone, victoryPoints, 0);
    }

    public Card(int moonStone, int sunStone, int victoryPoints, int numberOfImmEffect) {
        setup(moonStone, sunStone, victoryPoints, numberOfImmEffect);
    }

    private void setup(int moonStone, int sunStone, int victoryPoints, int numberOfImmEffect) {
        this.moonStone = moonStone;
        this.sunStone = sunStone;
        this.victoryPoints = victoryPoints;
        this.numberOfImmEffect = numberOfImmEffect;
        resInStock = new HashMap<>();
    }

    public abstract String cardName();

    /**
     * true if this card has an other action to do If the effect consist of putting
     * resources, you can use the Map `resInStock` and call `hasResourcesToStore()`
     * to retrieve it.
     * 
     * @return
     */
    public boolean hasImmEffect(Inventory inv) {
        numberOfImmEffect--;
        return numberOfImmEffect < 0 ? false : true;
    }

    /**
     * ask the card if some resources need to be added in the player inventory after
     * the card has been played. When this methode is used the resources will be set
     * to 0
     * 
     * @return
     */
    public final Map<Resources, Integer> hasResourcesToStore() {
        Map<Resources, Integer> tmp = new HashMap<>(resInStock);
        resInStock = new HashMap<>();
        return tmp;
    }

    /**
     * check if this card has an effect
     */
    public void hasAfterEffect() {
        // TODO when effect will be added
    }

    /**
     * check if this card has an effect
     */
    public void hasToken() {
        // TODO when token will be added
    }

    /**
     * @return the victoryPoints
     */
    public int getVictoryPoints() {
        return victoryPoints;
    }

    /**
     * @return the moonStone
     */
    public int getMoonStone() {
        return moonStone;
    }

    /**
     * @return the sunStone
     */
    public int getSunStone() {
        return sunStone;
    }

}